* Dotfiles
This repo contains the configuration files for my work setup. It uses [[https://www.gnu.org/software/stow/][GNU Stow]] to link the files
into the $HOME directory and utilizes [[https://github.com/plexus/chemacs2][Chemacs2]] to easily switch between [[https://www.gnu.org/software/emacs/][GNU Emacs]] configurations -
whether for debug or development. I strive for literate programming via Org-mode and continue to
hope that [[https://github.com/hlissner/doom-emacs][Doom Emacs]] will be my configuration framework one day.

** Installation
To facilitate linking of files from this repo to the $HOME directory, ensure =stow= is available.

#+BEGIN_SRC sh
  sudo apt install stow
#+END_SRC

As this repo contains submodules, clone using the following command to retrieve all necessary files.
#+BEGIN_SRC sh
  git clone <URL-of-dotfiles-repo> dotfiles --recursive
#+END_SRC

Once complete, load the files into the $HOME directory.
#+BEGIN_SRC sh
  cd dotfiles
  stow .
#+END_SRC

** Stow
#+BEGIN_QUOTE
GNU Stow is a symlink farm manager which takes distinct packages of software and/or data located in
separate directories on the filesystem, and makes them appear to be installed in the same place.

...

This is particularly useful for keeping track of system-wide and per-user installations of software
built from source, but [[http://brandon.invergo.net/news/2012-05-26-using-gnu-stow-to-manage-your-dotfiles.html][can also facilitate a more controlled approach to management of configuration
files in the user's home directory]], especially when [[http://lists.gnu.org/archive/html/info-stow/2011-12/msg00000.html][coupled with version control systems]].
#+END_QUOTE
Briefly, it creates symlinks from this cloned repo to its parent directory for both files and
directories contained within.

[[https://alexpearce.me/2016/02/managing-dotfiles-with-stow/][Managing dotfiles with GNU stow]] was helpful to understand this concept.

** Chemacs2
#+BEGIN_QUOTE
Chemacs 2 is an Emacs profile switcher, it makes it easy to run multiple Emacs configurations side by side.

Think of it as a bootloader for Emacs.
#+END_QUOTE
The obvious successor to [[https://github.com/plexus/chemacs][chemacs]], allows for switching between the profiles listed in
[[file:.emacs-profiles.el][.emacs-profiles.el]].

By default, the profile whose name matches the contents of [[file:.emacs-profile][.emacs-profile]] will be
chosen. Alternatively, the user may provide the profile name on the command line using
=--withprofile foo=. See [[https://github.com/plexus/chemacs2#usage][Usage]] or [[https://systemcrafters.cc/emacs-tips/multiple-configurations-with-chemacs2][this helpful System Crafters article]] for more info.

** Emacs Configurations
| *Name*     | *Profile*    | *Location*            | *default* |
|------------+--------------+-----------------------+-----------|
| [[#legacy][Legacy]]     | =legacy=     | [[file:.my-emacs/myinit.org][.my-emacs/myinit.org]]  | Yes       |
| [[#evil-basic][Evil Basic]] | =evil-basic= | [[file:.evil-basic/init.el][.evil-basic/init.el]]   | No        |
| [[#new][New]]        | =new=        | [[file:.new-emacs/config.org][.new-emacs/config.org]] | No        |

*** Legacy
My current config is a frankenstein of packages, customizations, and workarounds that I have
employed over the years for ASIC design, scripting, and software development. I hope to find time to
start anew and possibly switch to Doom altogether.

*** Evil Basic
The very basic configuration needed to get =vi= keybindings within Emacs, including =org-mode=.

*** New
Rediscover Emacs with a more modern approach. Test advanced features and pave the way towards more
powerful frameworks like Doom or Spacemacs.
1) [X] =use-package= to organize packages.
2) [ ] Literate Programming (i.e. Org file)
   - [ ] Auto-tangle on save https://youtu.be/kkqVTDbfYp4?t=1371
   - [ ] [[https://github.com/snosov1/toc-org][Table of Contents]]
3) [ ] House-keeping
   - [ ] [[https://github.com/emacscollective/no-littering][no-littering]]?
4) [ ] Non-GUI IDE-like features
   - [ ] ripgrip
   - [ ] magit
   - [ ] Completion framework
   - [ ] snippets
   - etc.
5) [ ] Emacs client/daemon
   - [ ] With X11 forwarding, similar experience to terminal Emacs inside tmux?
6) [ ] GUI Features
   - [ ] treemacs
   - [ ] lsp-mode
   - [ ] dap-mode?
   - [ ] flycheck/flyspell?
7) [ ] Beautify
   - [ ] ligatures?
   - [ ] icons?
   - [ ] fonts?

** Miscellaneous
SSH connections to =github.com= appear to be completely blocked by the firewall. Only HTTPS
connections are allowed for =push= / =pull=. For =push= ing to this repo, you will need a [[https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token][Personal
Access Token (PAT)]] because username/password are disallowed for security reasons.
